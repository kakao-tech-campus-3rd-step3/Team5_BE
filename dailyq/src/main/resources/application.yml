spring:
  application:
    name: DailyQ

  config:
    import: optional:file:.env[.properties]

  datasource:
    url: jdbc:mysql://${DB_HOST:${MYSQL_HOST}}:${DB_PORT:${MYSQL_PORT}}/${DB_NAME:${MYSQL_DATABASE}}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=utf8
    username: ${DB_USERNAME:${MYSQL_USER}}
    password: ${DB_PASSWORD:${MYSQL_PASSWORD}}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      chat:
        options:
          model: gpt-4.1-nano
    retry:
      max-attempts: 3
      backoff:
        initial-interval: 2000ms
        multiplier: 2
      on-http-codes: [ 429, 500, 503 ]

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    # HTTPS 환경에서 Mixed Content 오류 방지
    use-root-path: true

# OpenAPI 서버 설정
openapi:
  server:
    url: http://localhost:8080
    description: Development Server

# CORS 설정
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://34.22.98.44,https://dailyq.my,https://be.dailyq.my}

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true

---
# 프로덕션 환경 설정
spring:
  config:
    activate:
      on-profile: prod

# OpenAPI 서버 설정 (프로덕션)
openapi:
  server:
    url: https://be.dailyq.my
    description: Production Server