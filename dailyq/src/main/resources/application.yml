spring:
  application:
    name: DailyQ

  config:
    import: optional:file:.env[.properties]

  datasource:
    url: jdbc:mysql://${DB_HOST:${MYSQL_HOST}}:${DB_PORT:${MYSQL_PORT}}/${DB_NAME:${MYSQL_DATABASE}}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=utf8
    username: ${DB_USERNAME:${MYSQL_USER}}
    password: ${DB_PASSWORD:${MYSQL_PASSWORD}}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  # OAuth2 클라이언트 설정
  security:
    oauth2:
      client:
        registration:
          # Google 로그인 설정
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email
          # Kakao 로그인 설정
          kakao:
            client-id: ${KAKAO_API_KEY}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - account_email
            client-name: Kakao

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      chat:
        options:
          model: gpt-4.1-nano
    retry:
      max-attempts: 3
      backoff:
        initial-interval: 2000ms
        multiplier: 2
      on-http-codes: [ 429, 500, 503 ]

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    # HTTPS 환경에서 Mixed Content 오류 방지
    use-root-path: true

jwt:
  secret: ${JWT_SECRET}
  access-token-expiration-millis: ${JWT_ACCESS_TOKEN_EXPIRATION_MILLIS}   # 1시간
  refresh-token-expiration-millis: ${JWT_REFRESH_TOKEN_EXPIRATION_MILLIS} # 7일

# Cookie 설정
cookie:
  domain: ${COOKIE_DOMAIN:.dailyq.my}

# Security 설정
security:
  hsts:
    enabled: false  # 개발 환경에서는 HSTS 비활성화 (HTTP 허용)

# 개발용 API 설정
dev:
  api:
    password: ${DEV_API_PASSWORD}  # 별도 공유 예정

# OpenAPI 서버 설정
openapi:
  server:
    url: http://localhost:8080
    description: Development Server

# CORS 설정
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://34.22.98.44,https://dailyq.my,https://www.dailyq.my,https://be.dailyq.my,http://localhost:5173,http://localhost:5174,http://localhost:8080,https://team5-fe-ivory.vercel.app}

# Frontend URL for OAuth2 redirect
frontend:
  url: ${FRONTEND_URL:http://localhost:5173}

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true
  prometheus:
      metrics:
        export:
          enabled: true
---
# 프로덕션 환경 설정
spring:
  config:
    activate:
      on-profile: prod
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: https://be.dailyq.my/login/oauth2/code/google
          kakao:
            redirect-uri: https://be.dailyq.my/login/oauth2/code/kakao

server:
  # 프록시/로드밸런서 포워드 헤더 신뢰 (X-Forwarded-Proto 등)
  forward-headers-strategy: native

# Security 설정 (프로덕션)
security:
  hsts:
    enabled: true  # 프로덕션에서는 HSTS 활성화

# OpenAPI 서버 설정 (프로덕션)
openapi:
  server:
    url: https://be.dailyq.my
    description: Production Server